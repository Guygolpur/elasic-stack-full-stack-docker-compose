################################ If changed the dockerfies inside my apps: ################################

cd ./angular-frontend
docker build -t es-cluster-angular-frontend:latest .   
cd ../DotnetBackend 
docker build -t es-cluster-dotnet-backend:latest .
cd ../

################################ In order to work offline, convert to tar.gz: ################################

docker pull docker.elastic.co/package-registry/distribution:8.8.2
docker save -o package-registry-8.8.2.tar docker.elastic.co/package-registry/distribution:8.8.2

docker pull docker.elastic.co/elasticsearch/elasticsearch:8.8.2
docker pull docker.elastic.co/kibana/kibana:8.8.2
docker pull docker.elastic.co/beats/elastic-agent:8.8.2
docker pull postgres:latest

docker save docker.elastic.co/elasticsearch/elasticsearch:8.8.2 | gzip > elasticsearch-8.8.2.tar.gz
docker save docker.elastic.co/kibana/kibana:8.8.2 | gzip > kibana-8.8.2.tar.gz
docker save docker.elastic.co/beats/elastic-agent:8.8.2 | gzip > elastic-agent-8.8.2.tar.gz
docker save postgres:latest | gzip > postgres-latest.tar.gz

cd ./DotnetBackend
docker pull mcr.microsoft.com/dotnet/aspnet:8.0
docker pull mcr.microsoft.com/dotnet/sdk:8.0
docker save mcr.microsoft.com/dotnet/aspnet:8.0 | gzip > dotnet-aspnet-8.0.tar.gz
docker save mcr.microsoft.com/dotnet/sdk:8.0 | gzip > dotnet-sdk-8.0.tar.gz
docker save es-cluster-dotnet-backend:latest | gzip > es-cluster-dotnet-backend-latest.tar.gz

cd ../angular-frontend
docker pull node:latest
docker pull nginx:latest
docker save node:latest | gzip > node-latest.tar.gz
docker save nginx:latest | gzip > nginx-latest.tar.gz
docker save es-cluster-angular-frontend:latest | gzip > es-cluster-angular-frontend-latest.tar.gz
cd ../


################################ Then, in the remote offline server execute the commands: ################################

docker load -i package-registry-8.8.2.tar
docker run -d -p 8080:8080 docker.elastic.co/package-registry/distribution:8.8.2

gzip -d < postgres-latest.tar.gz | docker load
gzip -d < kibana-8.8.2.tar.gz | docker load
gzip -d < elasticsearch-8.8.2.tar.gz | docker load
gzip -d < elastic-agent-8.8.2.tar.gz | docker load
cd ./angular-frontend
gzip -d < es-cluster-angular-frontend-latest.tar.gz | docker load
gzip -d < node-latest.tar.gz | docker load
gzip -d < nginx-latest.tar.gz | docker load
cd ../DotnetBackend
gzip -d < es-cluster-dotnet-backend-latest.tar.gz | docker load 
gzip -d < dotnet-aspnet-8.0.tar.gz | docker load
gzip -d < dotnet-sdk-8.0.tar.gz | docker load
cd ../


################################ and then activate: ################################

docker compose up